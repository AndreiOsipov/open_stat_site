# Generated by Django 4.1.5 on 2023-01-21 10:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LocationAnalitics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=40, verbose_name='название города/страны')),
                ('vacancies_share', models.FloatField(verbose_name='доля вакансий в этом городе/стране')),
                ('middle_salary', models.IntegerField(verbose_name='средняя зп в этом городе/стране')),
            ],
            options={
                'verbose_name': 'общая аналитика по городу/стране',
                'verbose_name_plural': 'общая аналитика по всем городам/странам',
            },
        ),
        migrations.CreateModel(
            name='LocationAnaliticsWithProfession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=40, verbose_name='название города/страны')),
                ('vacancies_share', models.FloatField(verbose_name='доля вакансий в городе/стране по этойп профессии')),
                ('middle_salary', models.IntegerField(verbose_name='средняя зп в городе/стране по этой профессии')),
            ],
            options={
                'verbose_name': 'аналитика по городу/стране для выбранной профессии',
                'verbose_name_plural': 'общая аналитика по городам/странам для выбранной профессии',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSkillsByYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], verbose_name='год')),
                ('raiting_place', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], verbose_name='мемто в рейтенге топовых навыков')),
                ('description', models.TextField(verbose_name='описание навыка')),
            ],
            options={
                'verbose_name': 'навык и его место в рейтенге в этом году',
                'verbose_name_plural': 'навыки за каждый год с их местом в рейтенге',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalYaersAnalitics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], verbose_name='год')),
                ('middle_salary', models.IntegerField(verbose_name='средняя зарплата за год')),
                ('vacancies_num', models.IntegerField(verbose_name='количество вакансий за год по выбранной профессии')),
            ],
            options={
                'verbose_name': 'аналитка за год для выбранной профессии',
                'verbose_name_plural': 'аналитика за все года для выбранной профессии',
            },
        ),
        migrations.CreateModel(
            name='ProfessionImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(max_length=40)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Professions',
            fields=[
                ('profession_name', models.CharField(max_length=40)),
                ('profession_id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=40, verbose_name='название')),
                ('desription', models.TextField(verbose_name='описание')),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
            },
        ),
        migrations.CreateModel(
            name='YaersAnalitics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], verbose_name='год')),
                ('middle_salary', models.IntegerField(verbose_name='средняя зп за этот год')),
                ('vacancies_num', models.IntegerField(verbose_name='количество вакансий в этом году')),
            ],
            options={
                'verbose_name': 'общая аналитка за год',
                'verbose_name_plural': 'общая аналитика по всем годам',
            },
        ),
        migrations.AddConstraint(
            model_name='yaersanalitics',
            constraint=models.CheckConstraint(check=models.Q(('middle_salary__gte', 0)), name='year_salary'),
        ),
        migrations.AddConstraint(
            model_name='yaersanalitics',
            constraint=models.CheckConstraint(check=models.Q(('vacancies_num__gte', 0)), name='year_vacancies'),
        ),
        migrations.AddConstraint(
            model_name='professions',
            constraint=models.CheckConstraint(check=models.Q(('profession_id__length__gte', 5)), name='profession_id_check'),
        ),
        migrations.AddField(
            model_name='professionimages',
            name='profession_id',
            field=models.ForeignKey(db_column='profession_id', on_delete=django.db.models.deletion.CASCADE, to='stat_site.professions'),
        ),
        migrations.AddField(
            model_name='professionalyaersanalitics',
            name='profession_id',
            field=models.ForeignKey(db_column='profession_id', on_delete=django.db.models.deletion.CASCADE, to='stat_site.professions'),
        ),
        migrations.AddField(
            model_name='professionalskillsbyyear',
            name='profession_id',
            field=models.ForeignKey(db_column='profession_id', on_delete=django.db.models.deletion.CASCADE, to='stat_site.professions'),
        ),
        migrations.AddField(
            model_name='locationanaliticswithprofession',
            name='profession_id',
            field=models.ForeignKey(db_column='profession_id', on_delete=django.db.models.deletion.CASCADE, to='stat_site.professions'),
        ),
        migrations.AddConstraint(
            model_name='locationanalitics',
            constraint=models.CheckConstraint(check=models.Q(('middle_salary__gte', 0)), name='location_salary'),
        ),
        migrations.AddConstraint(
            model_name='locationanalitics',
            constraint=models.CheckConstraint(check=models.Q(('vacancies_share__gte', 0)), name='location_vacancies'),
        ),
        migrations.AddConstraint(
            model_name='professionalyaersanalitics',
            constraint=models.CheckConstraint(check=models.Q(('year__gte', 0)), name='prof_year_check'),
        ),
        migrations.AddConstraint(
            model_name='professionalyaersanalitics',
            constraint=models.CheckConstraint(check=models.Q(('middle_salary__gte', 0)), name='prof_salary_check'),
        ),
        migrations.AddConstraint(
            model_name='professionalyaersanalitics',
            constraint=models.CheckConstraint(check=models.Q(('vacancies_num__gte', 0)), name='prof_vacancies_check'),
        ),
        migrations.AddConstraint(
            model_name='locationanaliticswithprofession',
            constraint=models.CheckConstraint(check=models.Q(('middle_salary__gte', 0)), name='location_prof_salary_check'),
        ),
        migrations.AddConstraint(
            model_name='locationanaliticswithprofession',
            constraint=models.CheckConstraint(check=models.Q(('vacancies_share__gte', 0)), name='location_prof_vacancies_check'),
        ),
    ]
